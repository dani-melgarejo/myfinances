@using MyFinances.Logic.Models
@model StockMovementViewModel

@{
    ViewData["Title"] = Model.Id > 0 ? "Editar Operación" : "Nueva Operación";
    var isEdit = Model.Id > 0;
}

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    @if (isEdit)
                    {
                        <span>✏️ Editar Operación - @Model.Ticker</span>
                    }
                    else
                    {
                        <span>➕ Registrar Nueva Operación</span>
                    }
                </h5>
            </div>
            <div class="card-body">
                <form asp-action="@(isEdit ? "Edit" : "CreateOrEdit")" method="post" id="stock-form">
                    @if (isEdit)
                    {
                        <input asp-for="Id" type="hidden" />
                    }

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="AssetId" class="form-label">Asset</label>
                                @if (isEdit)
                                {
                                    <input type="hidden" asp-for="AssetId" />
                                    <input type="text" class="form-control" value="@Model.Ticker" readonly />
                                    <small class="form-text text-muted">El asset no se puede cambiar al editar</small>
                                }
                                else
                                {
                                    <select asp-for="AssetId" class="form-control select2" id="asset-select" required>
                                        <option value="">Seleccionar Asset...</option>
                                    </select>
                                }
                                <span asp-validation-for="AssetId" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Operation" class="form-label">Operación</label>
                                <select asp-for="Operation" class="form-control" required>
                                    <option value="">Seleccionar...</option>
                                    <option value="0" selected="@(Model.Operation == 0)">🛒 Compra</option>
                                    <option value="1" selected="@(Model.Operation == 1)">💸 Venta</option>
                                </select>
                                <span asp-validation-for="Operation" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label asp-for="Date" class="form-label">Fecha</label>
                                <input asp-for="Date" type="date" class="form-control" required />
                                <span asp-validation-for="Date" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="mb-3">
                                <label asp-for="Quantity" class="form-label">Cantidad</label>
                                <div class="input-group">
                                    <input asp-for="Quantity" type="number" step="0.00000001" class="form-control" required />
                                    <span class="input-group-text">📦</span>
                                </div>
                                <span asp-validation-for="Quantity" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="mb-3">
                                <label asp-for="Price" class="form-label">Precio</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input asp-for="Price" type="number" step="0.0001" class="form-control" required />
                                </div>
                                <span asp-validation-for="Price" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Type" class="form-label">Tipo</label>
                                <select asp-for="Type" class="form-control" required>
                                    <option value="">Seleccionar...</option>
                                    <option value="0" selected="@(Model.Type == 0)">📈 Acción</option>
                                </select>
                                <span asp-validation-for="Type" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Valor Total (Calculado)</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input id="total-value" type="text" class="form-control bg-light" readonly />
                                </div>
                                <small class="form-text text-muted">Se calcula automáticamente: Cantidad × Precio</small>
                            </div>
                        </div>
                    </div>

                    <!-- Información adicional para edición -->

                    <div class="mb-3">
                        <button type="submit" class="btn btn-primary">
                            @if (isEdit)
                            {
                                <span>💾 Actualizar Operación</span>
                            }
                            else
                            {
                                <span>💾 Guardar Operación</span>
                            }
                        </button>

                        @if (isEdit)
                        {
                            <a asp-action="Index" class="btn btn-secondary">
                                ⬅️ Volver al Listado
                            </a>
                            <button type="button" class="btn btn-danger" id="btn-delete">
                                🗑️ Eliminar
                            </button>
                        }
                        else
                        {
                            <a asp-action="Index" class="btn btn-secondary">
                                ⬅️ Volver al Listado
                            </a>
                            <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary">
                                🏠 Ir al Home
                            </a>
                        }
                    </div>
                </form>

                <!-- Alertas -->
                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        ✅ @TempData["Success"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        ❌ @TempData["Error"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Panel lateral con información -->
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">ℹ️ Información</h6>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <h6>📋 Tipos de Operación:</h6>
                    <ul class="list-unstyled">
                        <li><span class="badge bg-success">🛒 Compra</span> - Adquisición de activos</li>
                        <li><span class="badge bg-danger">💸 Venta</span> - Venta de activos</li>
                    </ul>
                </div>

                <div class="mb-3">
                    <h6>🏷️ Tipos de Activos:</h6>
                    <ul class="list-unstyled">
                        <li><span class="badge bg-primary">📈 Acción</span> - Acciones de empresas</li>
                        <li><span class="badge bg-warning">₿ Crypto</span> - Criptomonedas</li>
                        <li><span class="badge bg-info">📋 Bono</span> - Bonos y deuda</li>
                    </ul>
                </div>

                @if (isEdit)
                {
                    <div class="alert alert-info">
                        <small>
                            <strong>⚠️ Nota:</strong> Al editar una operación, el asset no se puede cambiar.
                            Si necesitas cambiar el asset, elimina esta operación y crea una nueva.
                        </small>
                    </div>
                }
                else
                {
                    <div class="alert alert-success">
                        <small>
                            <strong>💡 Consejo:</strong> Puedes buscar assets escribiendo su ticker en el campo Asset.
                            Si no existe, créalo primero en la sección de Assets.
                        </small>
                    </div>
                }
            </div>
        </div>

        <!-- Historial reciente (solo para edición) -->
        @if (isEdit)
        {
            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="mb-0">📊 Resumen de @Model.Ticker</h6>
                </div>
                <div class="card-body">
                    <div id="asset-summary">
                        <div class="text-center">
                            <div class="spinner-border spinner-border-sm" role="status">
                                <span class="visually-hidden">Cargando...</span>
                            </div>
                            <p class="mt-2">Cargando información...</p>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            const isEdit = @(isEdit ? "true" : "false");

            // Inicializar Select2 para assets (solo si no es edición)
            if (!isEdit) {
                $('#asset-select').select2({
                    placeholder: 'Buscar asset...',
                    minimumInputLength: 1,
                    ajax: {
                        url: '@Url.Action("Search", "Asset")',
                        dataType: 'json',
                        delay: 250,
                        data: function (params) {
                            return {
                                q: params.term
                            };
                        },
                        processResults: function (data) {
                            return {
                                results: data
                            };
                        },
                        cache: true
                    }
                });
            }

            // Establecer fecha actual por defecto si no hay valor
            if (!$('#Date').val()) {
                $('#Date').val(new Date().toISOString().split('T')[0]);
            }

            // Calcular valor total en tiempo real
            $('#Quantity, #Price').on('input', function() {
                calculateTotalValue();
            });

            // Validación en tiempo real
            $('#stock-form').on('input', 'input[required], select[required]', function() {
                validateForm();
            });

            // Botón eliminar (solo para edición)
            $('#btn-delete').click(function() {
                if (confirm('🗑️ ¿Está seguro de que desea eliminar esta operación?\n\nEsta acción no se puede deshacer.')) {
                    deleteOperation();
                }
            });

            // Cargar resumen del asset (solo para edición)
            if (isEdit) {
                loadAssetSummary(@Model.AssetId);
            }

            // Calcular valor inicial
            calculateTotalValue();
            validateForm();
        });

        function calculateTotalValue() {
            const quantity = parseFloat($('#Quantity').val()) || 0;
            const price = parseFloat($('#Price').val()) || 0;
            const total = quantity * price;

            $('#total-value').val(total.toFixed(4));

            // Aplicar color según el tipo de operación
            const operation = $('#Operation').val();
            if (operation === 0) {
                $('#total-value').removeClass('text-danger').addClass('text-success');
            } else if (operation === 'SELL') {
                $('#total-value').removeClass('text-success').addClass('text-danger');
            }
        }

        function validateForm() {
            let isValid = true;
            const requiredFields = $('#stock-form input[required], #stock-form select[required]');

            requiredFields.each(function() {
                const $field = $(this);
                const value = $field.val();

                if (!value || value === '') {
                    $field.addClass('is-invalid');
                    isValid = false;
                } else {
                    $field.removeClass('is-invalid');
                }
            });

            // Validaciones específicas
            const quantity = parseFloat($('#Quantity').val());
            const price = parseFloat($('#Price').val());

            if (quantity <= 0) {
                $('#Quantity').addClass('is-invalid');
                isValid = false;
            }

            if (price <= 0) {
                $('#Price').addClass('is-invalid');
                isValid = false;
            }

            // Habilitar/deshabilitar botón submit
            $('button[type="submit"]').prop('disabled', !isValid);

            return isValid;
        }

        function deleteOperation() {
            const operationId = $('#Id').val();

            $.post('@Url.Action("Delete", "Stocks")', { id: operationId })
                .done(function(response) {
                    if (response.success) {
                        alert('✅ ' + response.message);
                        window.location.href = '@Url.Action("Index", "Stocks")';
                    } else {
                        alert('❌ Error: ' + response.error);
                    }
                })
                .fail(function() {
                    alert('❌ Error al eliminar la operación.');
                });
        }

        function loadAssetSummary(assetId) {
            // Aquí puedes agregar una llamada AJAX para cargar información del asset
            // Por ejemplo: últimas operaciones, precio actual, etc.

            setTimeout(function() {
                $('#asset-summary').html(`
                    <div class="row text-center">
                        <div class="col-6">
                            <h6 class="text-muted">Operaciones</h6>
                            <h5 class="text-primary">--</h5>
                        </div>
                        <div class="col-6">
                            <h6 class="text-muted">Último Precio</h6>
                            <h5 class="text-success">--</h5>
                        </div>
                    </div>
                    <small class="text-muted">
                        <em>Funcionalidad en desarrollo</em>
                    </small>
                `);
            }, 1000);
        }

        // Cambiar color del formulario según la operación
        $('#Operation').change(function() {
            const operation = $(this).val();
            const card = $('.card').first();

            card.removeClass('border-success border-danger');

            if (operation === 0) {
                card.addClass('border-success');
            } else if (operation === 'SELL') {
                card.addClass('border-danger');
            }

            calculateTotalValue();
        });
    </script>
}

@section Styles {
    <style>
        .card {
            border-radius: 10px;
            transition: all 0.3s ease;
        }

            .card.border-success {
                border-left: 4px solid #28a745 !important;
            }

            .card.border-danger {
                border-left: 4px solid #dc3545 !important;
            }

        .form-control.is-invalid {
            border-color: #dc3545;
            box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
        }

        .input-group-text {
            background-color: #f8f9fa;
            border-color: #ced4da;
        }

        .bg-light {
            background-color: #f8f9fa !important;
        }

        .badge {
            font-size: 0.8em;
        }

        .list-unstyled li {
            margin-bottom: 0.5rem;
        }

        .spinner-border-sm {
            width: 1rem;
            height: 1rem;
        }

        .alert {
            border-radius: 8px;
            border: none;
        }

        .btn {
            border-radius: 6px;
            transition: all 0.2s ease;
        }

            .btn:hover {
                transform: translateY(-1px);
            }

        .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
            border-radius: 10px 10px 0 0 !important;
        }

        .form-label {
            font-weight: 600;
            color: #495057;
        }

        .text-success {
            color: #28a745 !important;
        }

        .text-danger {
            color: #dc3545 !important;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .col-md-4 {
                margin-top: 1rem;
            }
        }
    </style>
}