@model MyFinancesApp.Models.CreateAssetViewModel

@{
    ViewData["Title"] = "Activos";
}

<div class="row">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Agregar Nuevo Asset</h5>
            </div>
            <div class="card-body">
                <form asp-action="Create" method="post">
                    <div class="mb-3">
                        <label asp-for="Ticker" class="form-label">Ticker</label>
                        <input asp-for="Ticker" class="form-control" placeholder="Ej: AAPL, TSLA" required />
                        <span asp-validation-for="Ticker" class="text-danger"></span>
                        <div class="form-text">Ingresa el símbolo del activo (ticker)</div>
                    </div>

                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Agregar Asset
                    </button>
                </form>
            </div>
        </div>
    </div>

    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Lista de Assets</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped" id="assets-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Ticker</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Los datos se cargarán dinámicamente -->
                        </tbody>
                    </table>
                </div>

                <!-- Paginación -->
                <nav aria-label="Paginación de assets">
                    <ul class="pagination" id="pagination">
                        <!-- Se generará dinámicamente -->
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            let currentPage = 1;
            const perPage = 10;

            function loadAssets(page = 1) {
                $.get('@Url.Action("Grid", "Asset")', { page: page, perPage: perPage })
                    .done(function(response) {
                        const tbody = $('#assets-table tbody');
                        tbody.empty();

                        response.data.forEach(function(asset) {
                            tbody.append(`
                                <tr>
                                    <td>${asset.id}</td>
                                    <td><strong>${asset.ticker}</strong></td>
                                    <td>
                                        <button class="btn btn-sm btn-info" onclick="viewAsset(${asset.id})">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </td>
                                </tr>
                            `);
                        });

                        updatePagination(response.total, page);
                    })
                    .fail(function() {
                        alert('Error al cargar los assets');
                    });
            }

            function updatePagination(total, currentPage) {
                const totalPages = Math.ceil(total / perPage);
                const pagination = $('#pagination');
                pagination.empty();

                // Botón anterior
                if (currentPage > 1) {
                    pagination.append(`
                        <li class="page-item">
                            <a class="page-link" href="#" onclick="loadAssets(${currentPage - 1})">Anterior</a>
                        </li>
                    `);
                }

                // Números de página
                for (let i = 1; i <= totalPages; i++) {
                    const active = i === currentPage ? 'active' : '';
                    pagination.append(`
                        <li class="page-item ${active}">
                            <a class="page-link" href="#" onclick="loadAssets(${i})">${i}</a>
                        </li>
                    `);
                }

                // Botón siguiente
                if (currentPage < totalPages) {
                    pagination.append(`
                        <li class="page-item">
                            <a class="page-link" href="#" onclick="loadAssets(${currentPage + 1})">Siguiente</a>
                        </li>
                    `);
                }
            }

            // Cargar assets al iniciar
            loadAssets();

            // Función global para ver asset
            window.viewAsset = function(id) {
                // Implementar vista de detalles del asset
                alert('Ver detalles del asset ID: ' + id);
            };
        });
    </script>
}